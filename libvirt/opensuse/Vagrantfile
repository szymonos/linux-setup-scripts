# -*- mode: ruby -*-
# vi: set ft=ruby :
# *Variables
box          = "opensuse/Tumbleweed.x86_64"
provider     = "libvirt"
boxname      = "tumbleweed"
hostname     = "suse"
# network configuration
ip_addr      = "192.168.33.5"
# vm configuration
memory       = 4096
cpu          = 4
# vagrant data location
vagrant_home ="/mnt/ext/vagrant.d"

# calculate global variables
hostname = "#{File.basename(Dir.pwd)}-#{boxname}".downcase

# *Scripts
script_install_packages = <<~SCRIPT
  zypper in -y git btop nano
SCRIPT

script_configure_static_ip = <<~SCRIPT
  cat <<EOF | tee /etc/sysconfig/network/ifcfg-eth1 >/dev/null
  BOOTPROTO='static'
  IPADDR='#{ip_addr}/24'
  STARTMODE='nfsroot'
  EOF
SCRIPT

# *VM provisioning
Vagrant.configure("2") do |config|
  # common config
  config.vm.provider provider do |v|
    v.memory = memory
    v.cpus = cpu
  end
  config.vm.define boxname do |node|
    identity_file = "#{Dir.pwd}/.vagrant/machines/#{boxname}/#{provider}/private_key"
    # node triggers
    node.trigger.after :reload do |trigger|
      trigger.info = "Add vagrant configuration to ssh config file..."
      trigger.run = {
        privileged: "false", powershell_elevated_interactive: "false",
        path: "../../.assets/trigger/set_ssh_config.ps1", :args => [ip_addr, hostname, identity_file]
      }
    end
    config.trigger.after :destroy do |trigger|
      trigger.info = "Cleaning up ssh config, known_hosts files and .vagrant directory..."
      trigger.run = {
        privileged: "false", powershell_elevated_interactive: "false",
        path: "../../.assets/trigger/delete_ssh_config.ps1", :args => [ip_addr, hostname]
      }
    end
    # node setup
    node.vm.box = box
    node.vm.hostname = hostname
    node.vm.network "private_network", ip: ip_addr
    # node provision
    node.vm.provision "shell", name: "configure static ip", inline: script_configure_static_ip
    node.vm.provision "shell", name: "install packages...", inline: script_install_packages
    node.vm.provision "shell", name: "install base...", path: "../../.assets/provision/install_base.sh"
    node.vm.provision "shell", name: "install exa...", path: "../../.assets/provision/install_exa.sh"
    node.vm.provision "shell", name: "install bat...", path: "../../.assets/provision/install_bat.sh"
    node.vm.provision "shell", name: "install ripgrep...", path: "../../.assets/provision/install_ripgrep.sh"
    node.vm.provision "shell", name: "install yq", path: "../../.assets/provision/install_yq.sh"
    # ~setting up profiles
    node.vm.provision "shell", name: "install oh-my-posh...", path: "../../.assets/provision/install_omp.sh"
    node.vm.provision "shell", name: "install PowerShell...", path: "../../.assets/provision/install_pwsh.sh"
    node.vm.provision "file", source: "../../.assets/config", destination: "/tmp/"
    node.vm.provision "shell", name: "set up PS for all users...", path: "../../.assets/provision/setup_profiles_allusers.sh"
    node.vm.provision "shell", name: "set up user profile...", path: "../../.assets/provision/setup_profiles_user.sh", privileged: false
    node.vm.provision "ansible", playbook: "../../.assets/playbooks/setup_user_ssh.yaml"
    # ~reload vm
    node.vm.provision :reload
  end
end
